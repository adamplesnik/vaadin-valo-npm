@use 'sass:math';

@import 'loading-indicator';
@import 'reconnect-dialog';

/*
 * Global Valo related styles, containing styles which are necessary for the application
 * and widgets to work correctly.
 *
 * @access private
 */
@mixin valo-global {
  .v-widget {
    // Baseline expectations for all Vaadin widgets
    box-sizing: border-box;
    display: inline-block;
    vertical-align: top;

    // Reset, since ordered layout uses text-align for horizotal alignment inside slots and
    // white-space: nowrap; for horizontal layout orientation
    text-align: left;
    white-space: normal;
  }

  .v-generated-body {
    overflow: hidden;
    margin: 0;
    padding: 0;
    border: 0;
  }

  .v-app {
    height: 100%;
    // Cancel tap highlight from all elements inside the app
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);

    // Prevent iOS text size adjust after orientation change, without disabling user zoom
    -webkit-text-size-adjust: 100%;

    // Disable text selection by default
    -webkit-user-select: none;
    user-select: none;

    // Enable text selection for certain elements
    input[type='text'],
    .v-slot > .v-caption,
    .v-gridlayout-slot > .v-caption,
    .v-has-caption > .v-caption,
    .v-formlayout-captioncell > .v-caption,
    .v-csslayout > .v-caption {
      -webkit-user-select: text;
      user-select: text;
    }
  }

  .v-ui {
    position: relative;
  }

  // Prevent margin collapse
  .v-ui.v-ui-embedded {
    margin-top: -1px;
    border-top: 1px solid transparent;
  }

  .v-ui:focus {
    outline: none;
  }

  .v-overlay-container {
    width: 0;
    height: 0;
  }

  .v-drag-element {
    z-index: 60000;
    // Override any other position properties
    position: absolute !important;
    cursor: default;
  }

  .v-clip {
    overflow: hidden;
  }

  .v-scrollable {
    overflow: auto;

    // "Unnecessary scrollbar" related fixes
    > .v-widget {
      // This is needed for IE
      vertical-align: middle;

      // Needed for all browsers. Can't really show anything outside the
      // scrolling area anyway, so we can safely hide any overflow
      overflow: hidden;
    }
  }

  .v-ios.v-webkit .v-scrollable {
    -webkit-overflow-scrolling: touch;
  }

  //fix for #14813 - unable to scroll on iOS devices
  .v-webkit.v-ios .v-browserframe {
    -webkit-overflow-scrolling: touch;
    overflow: auto;
  }

  .v-assistive-device-only,
  .v-assistive-device-only-label label {
    position: absolute;
    top: -2000px;
    left: -2000px;
    width: 10px;
    overflow: hidden;
  }

  .v-icon {
    cursor: inherit;
    -webkit-user-select: none;
    user-select: none;
  }

  .v-icon,
  .v-errorindicator,
  .v-required-field-indicator {
    display: inline-block;
    line-height: inherit;
  }

  .v-caption {
    display: inline-block;
    white-space: nowrap;
    line-height: $v-line-height;
  }

  .v-captiontext {
    display: inline-block;
    line-height: inherit;
  }

  // Component global styles should also be included here
  @include valo-gridlayout-global;
  @include valo-calendar-global;
  @include valo-colorpicker-global;
}

/**
 * Common application styles, such as loading indicators, tooltip and context menu styles,
 * caption and icon defaults, basic HTML element resets.
 * Should only be included once (done automatically when including the main valo mixin).
 *
 * @requires {mixin} valo-app-style
 */
@mixin valo-common {
  .v-app,
  .v-app-loading {
    background-color: $v-app-background-color;
    color: $v-font-color;
    cursor: default;
    font-family: $v-font-family;
    font-size: $v-font-size;
    font-weight: $v-font-weight;
    line-height: $v-line-height;
  }

  .v-app-loading {
    width: 100%;
    height: 100%;
    background: $v-app-background-color;

    $_size: 28px + round(math.div($v-unit-size, 2));

    &:before {
      content: '';
      position: fixed;
      z-index: 100;
      top: 45%;
      left: 50%;
      width: 28px;
      height: 28px;
      padding: round(math.div($v-unit-size, 4));
      margin-top: round(math.div($_size, -2));
      margin-left: round(math.div($_size, -2));
      border-radius: $v-border-radius;
    }

    @if $v-app-loading-text != '' {
      &:after {
        position: fixed;
        z-index: 100;
        top: 45%;
        padding-top: $_size;
        text-align: center;
        left: 0;
        right: 0;
        content: $v-app-loading-text;
      }
    }
  }

  @include valo-loading-bar;

  .v-scrollable:focus {
    outline: none;
  }

  img.v-icon {
    vertical-align: middle;
  }

  .v-caption {
    font-size: $v-caption-font-size;
    font-weight: $v-caption-font-weight;
  }

  .v-caption-on-left .v-caption,
  .v-caption-on-right .v-caption {
    padding-top: 0;
    padding-bottom: 0;
  }

  .v-icon + .v-captiontext,
  .v-icon + span {
    margin-left: round(math.div($v-unit-size, 5));

    &:empty {
      margin-left: 0;
    }
  }

  .v-errorindicator {
    @include valo-error-indicator-style;
  }

  .v-errorindicator-info {
    @include valo-error-indicator-style($indicator-color: $v-error-indicator-level-info-color);
  }

  .v-errorindicator-warning {
    @include valo-error-indicator-style($indicator-color: $v-error-indicator-level-warning-color);
  }

  .v-errorindicator-error {
    @include valo-error-indicator-style($indicator-color: $v-error-indicator-level-error-color);
  }

  .v-errorindicator-critical {
    @include valo-error-indicator-style($indicator-color: $v-error-indicator-level-critical-color);
  }

  .v-errorindicator-system {
    @include valo-error-indicator-style($indicator-color: $v-error-indicator-level-system-color);
  }

  .v-required-field-indicator {
    color: $v-error-indicator-color;
    padding: 0 0.2em;
  }

  .v-disabled {
    cursor: default !important;
  }

  .v-draggable {
    -webkit-user-select: none !important;
    user-select: none !important;
  }

  .v-drag-element {
    background: $v-app-background-color;
    color: $v-font-color;
    box-shadow: 0 2px 10px rgba(#000, 0.2);
    border-radius: $v-border-radius;
    overflow: hidden;
    opacity: 0.5;
  }

  @include valo-reconnect-dialog;
}

/**
 * Error indicator styles. The error indicator is by default a font character which you can style freely.
 *
 * @param {boolean} $is-pseudo-element (false) - is the selector including this mixin targeting a pseudo element
 *
 * @requires {mixin} valo-error-indicator-icon-style by default
 */
@mixin valo-error-indicator-style($is-pseudo-element: false, $indicator-color: $v-error-indicator-color) {
  color: $indicator-color;
  font-weight: 600;
  width: ceil(math.div($v-unit-size, 2));
  text-align: center;

  @if $is-pseudo-element {
    content: '!';
  } @else {
    &:before {
      content: '!';
    }
  }
}
