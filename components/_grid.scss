@use 'sass:math';

@import 'table';

$v-grid-row-background-color: valo-table-background-color() !default;
$v-grid-row-stripe-background-color: scale-color(
  $v-grid-row-background-color,
  $lightness: if(color-luminance($v-grid-row-background-color) < 10, 4%, -4%)
) !default;

$v-grid-border-color-source: $v-grid-row-background-color !default;
$v-grid-border: 1px solid #ddd !default;
$v-grid-cell-focused-border: 2px solid $v-selection-color !default;

$v-grid-row-height: $v-table-row-height !default;
$v-grid-row-selected-background-color: $v-selection-color !default;

$v-grid-header-font-size: $v-table-header-font-size !default;
$v-grid-header-background-color: $v-background-color !default;

$v-grid-cell-padding-horizontal: 1.5 * $v-table-cell-padding-horizontal !default;

$v-grid-animations-enabled: $v-animations-enabled !default;

$v-grid-details-marker-width: 2px !default;
$v-grid-details-marker-color: $v-selection-color !default;
$v-grid-details-border-top: #eee !default;
$v-grid-details-border-top-stripe: #ddd !default;

$v-grid-border-size: 1px !default;
$v-grid-border: $v-grid-border-size solid #ddd !default;
$v-grid-cell-vertical-border: $v-grid-border !default;
$v-grid-cell-horizontal-border: $v-grid-cell-vertical-border !default;
$v-grid-details-border-bottom: $v-grid-cell-horizontal-border !default;
$v-grid-details-border-bottom-stripe: $v-grid-cell-horizontal-border !default;

$v-grid-border-size: 1px !default;
$v-grid-border: $v-grid-border-size solid #ddd !default;
$v-grid-cell-vertical-border: $v-grid-border !default;
$v-grid-cell-horizontal-border: $v-grid-cell-vertical-border !default;
$v-grid-cell-focused-border: 1px solid !default;
$v-grid-header-border: $v-grid-border !default;
$v-grid-footer-border: $v-grid-header-border !default;

$v-grid-row-height: round($v-font-size * 1.5) !default;
$v-grid-row-background-color: #fff !default;
$v-grid-row-stripe-background-color: darken($v-grid-row-background-color, 5%) !default;
$v-grid-row-selected-background-color: darken($v-grid-row-background-color, 25%) !default;
$v-grid-row-focused-background-color: null !default;

$v-grid-header-row-height: null !default;
$v-grid-header-font-size: $v-font-size !default;
$v-grid-header-background-color: $v-grid-row-background-color !default;
$v-grid-header-drag-marked-color: $v-grid-row-selected-background-color !default;

$v-grid-footer-row-height: $v-grid-header-row-height !default;
$v-grid-footer-font-size: $v-grid-header-font-size !default;
$v-grid-footer-background-color: $v-grid-header-background-color !default;

$v-grid-cell-padding-horizontal: 10px !default;

$v-grid-editor-background-color: $v-grid-row-background-color !default;

$v-grid-details-marker-width: 2px !default;
$v-grid-details-marker-color: $v-grid-row-selected-background-color !default;
$v-grid-details-border-top: $v-grid-cell-horizontal-border !default;
$v-grid-details-border-top-stripe: $v-grid-cell-horizontal-border !default;
$v-grid-details-border-bottom: 1px solid darken($v-grid-row-stripe-background-color, 10%) !default;
$v-grid-details-border-bottom-stripe: 1px solid darken($v-grid-row-background-color, 10%) !default;

@import '_escalator';

@mixin base-grid($primaryStyleName: v-grid) {
  @include base-escalator($primaryStyleName: $primaryStyleName, $background-color: $v-grid-row-background-color);

  .#{$primaryStyleName} {
    outline: none;
  }

  // Column drag and drop elements

  .#{$primaryStyleName} .header-drag-table {
    border-spacing: 0;
    position: relative;
    table-layout: fixed;
    width: inherit; // a decent default fallback

    .#{$primaryStyleName}-header {
      position: absolute;
      > .#{$primaryStyleName}-cell {
        border: $v-grid-border;
        margin-top: -10px;
        opacity: 0.9;
        z-index: 30000;
      }

      > .#{$primaryStyleName}-drop-marker {
        background-color: $v-grid-header-drag-marked-color;
        position: absolute;
        width: 3px;
      }
    }
  }

  // Sidebar

  .#{$primaryStyleName}-sidebar.v-contextmenu {
    &.#{$primaryStyleName}-sidebar-popup {
      right: auto;
    }
  }

  // Common cell styles

  .#{$primaryStyleName}-cell {
    > * {
      line-height: $v-line-height;
      vertical-align: middle;
    }

    // Force div elements to inline-blocks by default to enable vertical centering
    > div {
      display: inline-block;
    }

    &.frozen {
      position: relative;
      z-index: 11;
    }

    // Style for ComponentRenderer wrap
    div.component-wrap {
      width: 100%;
    }
  }

  .#{$primaryStyleName}-column-resize-simple-indicator {
    position: absolute;
    width: 3px;
    top: 0;
    left: $v-grid-cell-padding-horizontal;
    z-index: 9001;
    background: #fff;
    box-shadow: 0 0 5px #000;

    user-select: none;
  }

  // Footer

  .#{$primaryStyleName}-footer {
    td {
      background-color: $v-grid-footer-background-color;
      font-size: $v-grid-footer-font-size;
      font-weight: inherit;
      border-left: $v-grid-footer-border;
      border-top: $v-grid-footer-border;
      border-bottom: none;
      line-height: $v-grid-footer-row-height;

      &:first-child {
        border-left: none;
      }
    }
  }

  // Header and footer

  .#{$primaryStyleName}-header,
  .#{$primaryStyleName}-footer {
    .#{$primaryStyleName}-cell {
      overflow: visible;
    }
  }

  .#{$primaryStyleName}-column-header-content,
  .#{$primaryStyleName}-column-footer-content {
    width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    // Hackish, needed to override the "v-grid-cell > *" rule above
    line-height: $v-grid-row-height;
    vertical-align: baseline;
  }

  // Decorative elements

  .#{$primaryStyleName}-header-deco {
    border-top: $v-grid-header-border;
    border-right: $v-grid-header-border;
    background-color: $v-grid-header-background-color;
  }

  .#{$primaryStyleName}-footer-deco {
    border-bottom: $v-grid-footer-border;
    border-right: $v-grid-footer-border;
    background-color: $v-grid-footer-background-color;
  }

  .#{$primaryStyleName}-horizontal-scrollbar-deco {
    background-color: $v-grid-footer-background-color;
    border: $v-grid-footer-border;
    border-top: none;
  }

  // Focused cell style (common for all cells)

  .#{$primaryStyleName}-cell-focused {
    position: relative;

    &:before {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      border: $v-grid-cell-focused-border;
      display: none;
      pointer-events: none;
    }
  }

  .#{$primaryStyleName}:focus .#{$primaryStyleName}-cell-focused:before {
    display: block;
  }

  .#{$primaryStyleName}.v-disabled:focus .#{$primaryStyleName}-cell-focused:before {
    // Disabled Grid should not show cell focus outline
    display: none;
  }

  // Editor

  .#{$primaryStyleName}-editor {
    position: absolute;
    z-index: 20;
    overflow: hidden;
    left: 0;
    right: 0;
    border: $v-grid-border;
    box-sizing: border-box;
    margin-top: nth($v-grid-border, 1) * -1;
    box-shadow: 0 0 9px rgba(0, 0, 0, 0.2);

    // Unbuffered footer needs to be 100% width to display correctly
    &.unbuffered {
      .#{$primaryStyleName}-editor-footer {
        width: 100%;
      }
    }
  }

  .#{$primaryStyleName}-editor-cells {
    position: relative;
    white-space: nowrap;

    &.frozen {
      z-index: 2;
    }

    > div {
      display: inline-block;
      box-sizing: border-box;
      vertical-align: middle;
      background: $v-grid-editor-background-color;

      &:first-child {
        border-left: none;
      }

      > * {
        vertical-align: middle;
        display: inline-block;
      }

      .v-filterselect {
        padding-left: 0;
      }

      input[type='text'],
      input[type='text'].v-filterselect-input,
      input[type='password'] {
        padding-left: $v-grid-cell-padding-horizontal;
      }

      input[type='text']:not(.v-filterselect-input),
      input[type='password'] {
        padding-right: $v-grid-cell-padding-horizontal * 0.5;
      }

      :not(.v-assistive-device-only-label).v-widget > input[type='checkbox'] {
        margin-left: $v-grid-cell-padding-horizontal;
      }

      .v-textfield,
      .v-datefield,
      .v-filterselect {
        min-width: 100%;
        max-width: 100%;
        min-height: 100%;
        max-height: 100%;
      }

      .v-select,
      .v-select-select {
        min-width: 100%;
        max-width: 100%;
      }

      &.not-editable.#{$primaryStyleName}-cell {
        float: none;
      }
    }

    .error::before {
      position: absolute;
      display: block;
      height: 0;
      width: 0;
      content: '';
      border-top: 5px solid red;
      border-right: 5px solid transparent;
    }

    .error,
    .error > input {
      background-color: #fee;
    }
  }

  .#{$primaryStyleName}-editor-footer {
    display: table;
    height: $v-grid-row-height;
    border-top: $v-grid-cell-horizontal-border;
    margin-top: nth($v-grid-cell-horizontal-border, 1) * -1;
    background: $v-grid-row-background-color;
    padding: 0 5px;

    + .#{$primaryStyleName}-editor-cells > div {
      border-bottom: none;
      border-top: $v-grid-cell-horizontal-border;
    }

    &:first-child {
      border-top: none;
      margin-top: 0;
      border-bottom: $v-grid-cell-horizontal-border;
      margin-bottom: nth($v-grid-cell-horizontal-border, 1) * -1;
    }
  }

  .#{$primaryStyleName}-editor-message,
  .#{$primaryStyleName}-editor-buttons {
    display: table-cell;
    white-space: nowrap;
    vertical-align: middle;
  }

  .#{$primaryStyleName}-editor-message {
    width: 100%;
    position: relative;

    > div {
      position: absolute;
      width: 100%;
      overflow: hidden;
      text-overflow: ellipsis;
      line-height: $v-grid-row-height;
      top: 0;
    }
  }

  .#{$primaryStyleName}-editor-save {
    margin-right: 4px;
  }

  .#{$primaryStyleName}-spacer {
    // using padding since left is used with some position functions in escalator
    padding-left: $v-grid-details-marker-width - $v-grid-border-size;
  }

  .#{$primaryStyleName}-spacer > td {
    display: block;
    padding: 0;

    background-color: $v-grid-row-background-color;
    border-top: $v-grid-details-border-top;
    border-bottom: $v-grid-details-border-bottom;
  }

  .#{$primaryStyleName}-spacer.stripe > td {
    background-color: $v-grid-row-stripe-background-color;
    border-top: $v-grid-details-border-top-stripe;
    border-bottom: $v-grid-details-border-bottom-stripe;
  }

  .#{$primaryStyleName}-spacer-deco-container {
    border-top: $v-grid-border-size solid transparent; // same size as table wrapper border
    position: relative;
    top: 0; // escalator will override top for scrolling and margin-top for header offset.
    z-index: 5;
  }

  .#{$primaryStyleName}-spacer-deco {
    top: 0; // this will be overridden by code, but it's a good default.
    left: 0;
    width: $v-grid-details-marker-width;
    background-color: $v-grid-details-marker-color;
    position: absolute;
    height: 100%; // this will be overridden by code, but it's a good default.
    pointer-events: none;
  }

  // Renderers

  .#{$primaryStyleName}-cell > .v-progressbar {
    width: 100%;
  }
}

$v-grid-drag-indicator-color: $v-focus-color;

/**
 *
 *
 * @param {string} $primary-stylename (v-grid) -
 *
 * @group grid
 */
@mixin valo-grid($primary-stylename: v-grid) {
  @include base-grid($primary-stylename);

  .#{$primary-stylename} {
    -webkit-user-select: text;
    user-select: text;
    background-color: $v-background-color;

    &.v-disabled {
      opacity: $v-disabled-opacity;
    }
  }

  .#{$primary-stylename}-header .#{$primary-stylename}-cell.dragged {
    opacity: 0.5;
    transition: opacity 0.3s ease-in-out;
  }

  .#{$primary-stylename}-header .#{$primary-stylename}-cell.dragged-column-header {
    margin-top: round(math.div($v-grid-row-height, -2));
  }

  .#{$primary-stylename}-editor {
    border-color: $v-focus-color;
  }

  .#{$primary-stylename}-editor-footer {
    font-size: $v-font-size--small;
    padding: 0 round($v-layout-spacing-horizontal * 0.5);
    background: $v-app-background-color;
  }

  .#{$primary-stylename}-editor-cells {
    z-index: 1;
  }

  .#{$primary-stylename}-editor-cells > div {
    // Vertical centering for widgets
    &:before {
      content: '';
      display: inline-block;
      height: 100%;
      vertical-align: middle;
    }

    &.not-editable.#{$primary-stylename}-cell {
      float: none;
    }

    .error::before {
      border-top: round($v-unit-size * 0.25) solid $v-error-indicator-color;
      border-right: round($v-unit-size * 0.25) solid transparent;
    }

    .error,
    .error > input {
      // taken from @mixin valo-textfield-error-style()
      background-color: scale-color($v-error-indicator-color, $lightness: 98%);
    }

    .v-textfield,
    .v-textfield-focus,
    .v-datefield,
    .v-datefield .v-textfield-focus,
    .v-filterselect-input,
    .v-filterselect-input:focus {
      border: none;
      border-radius: 0;
      background: transparent;
    }

    input[type='text'].v-datefield-textfield {
      padding-left: $v-unit-size * 1.2;
    }

    .v-textfield-focus,
    .v-datefield .v-textfield-focus,
    .v-filterselect-input:focus {
      position: relative;
    }

    .v-select {
      padding-left: round($v-grid-cell-padding-horizontal * 0.5);
      padding-right: round($v-grid-cell-padding-horizontal * 0.5);
    }

    .v-checkbox.v-widget {
      margin: 0 round($v-grid-cell-padding-horizontal * 0.5) 0 $v-grid-cell-padding-horizontal;

      > input[type='checkbox'] {
        margin-left: 0;
      }

      > label {
        white-space: nowrap;
      }
    }
  }

  .#{$primary-stylename}-editor-message > div:before {
    display: inline-block;
    @include valo-error-indicator-style($is-pseudo-element: true);
  }

  .#{$primary-stylename}-editor-save,
  .#{$primary-stylename}-editor-cancel {
    font-weight: $v-font-weight + 100;
    text-decoration: none;
    border: none;
    background: transparent;
    padding: round($v-layout-spacing-vertical * 0.5) round($v-layout-spacing-horizontal * 0.5);
    margin: 0;
    outline: none;
  }

  .#{$primary-stylename}-spacer {
    margin-top: -1px;
  }

  // Customize scrollbars
  .#{$primary-stylename}-scroller {
    &::-webkit-scrollbar {
      border: none;
    }

    &::-webkit-scrollbar-thumb {
      border-radius: 10px;
      border: 4px solid transparent;
      background: if(is-dark-color($v-grid-header-background-color), rgba(255, 255, 255, 0.3), rgba(0, 0, 0, 0.3));
      -webkit-background-clip: content-box;
      background-clip: content-box;
    }
  }

  .#{$primary-stylename}-scroller-vertical::-webkit-scrollbar-thumb {
    min-height: 30px;
  }

  .#{$primary-stylename}-scroller-horizontal::-webkit-scrollbar-thumb {
    min-width: 30px;
  }

  // Drag and drop badge
  .#{$primary-stylename}-row-drag-badge {
    background-color: red;
    color: white;
    display: block;
    width: 30px;
    height: 30px;
    border-radius: 10px;
    line-height: 30px;
    text-align: center;
    float: left;
  }

  // Drag and drop
  .#{$primary-stylename}-row-drag-top,
  .#{$primary-stylename}-row-drag-bottom,
  .#{$primary-stylename}-row-drag-bottom {
    z-index: 100; // based on what else z-indexes are in grid/escalator
  }

  .#{$primary-stylename}-row-drag-top:before,
  .#{$primary-stylename}-row-drag-bottom:after {
    content: '';
    display: block;
    position: absolute;
    height: 2px;
    width: 100%;
    background: $v-grid-drag-indicator-color;
    pointer-events: none;
    border: none;
  }

  .#{$primary-stylename}-row-drag-bottom:after {
    bottom: -1px;
  }

  .#{$primary-stylename}-row-drag-top:before {
    top: -1px;
  }

  .#{$primary-stylename}-row-drag-top:first-child:before {
    top: 0;
  }

  .#{$primary-stylename}-row-drag-center:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 2px;
    border: 2px solid $v-grid-drag-indicator-color;
    pointer-events: none;
  }

  .#{$primary-stylename}-row-selected {
    &.#{$primary-stylename}-row-drag-center:after {
      border-color: darken($v-grid-drag-indicator-color, 10%);
    }

    &.#{$primary-stylename}-row-drag-top:before,
    &.#{$primary-stylename}-row-drag-bottom:after {
      background: darken($v-grid-drag-indicator-color, 10%);
    }
  }

  // Show drop hint when the grid is empty or,
  // if the DropMode.ON_TOP is used and dragging below last row
  .#{$primary-stylename}-body-drag-top:after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    pointer-events: none;
    border: 2px solid $v-grid-drag-indicator-color;
    z-index: 100; // based on what else z-indexes are in grid/escalator
  }
}
